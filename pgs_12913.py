# 프로그래머스 : 땅따먹기 (https://programmers.co.kr/learn/courses/30/lessons/12913)

# 문제 설명
# 땅따먹기 게임을 하려고 합니다. 땅따먹기 게임의 땅(land)은 총 N행 4열로 이루어져 있고, 
# 모든 칸에는 점수가 쓰여 있습니다. 1행부터 땅을 밟으며 한 행씩 내려올 때, 각 행의 4칸 중 한 칸만 밟으면서 내려와야 합니다. 
# 단, 땅따먹기 게임에는 한 행씩 내려올 때, 같은 열을 연속해서 밟을 수 없는 특수 규칙이 있습니다.

# 예를 들면,
# | 1 | 2 | 3 | 5 |
# | 5 | 6 | 7 | 8 |
# | 4 | 3 | 2 | 1 |
# 로 땅이 주어졌다면, 1행에서 네번째 칸 (5)를 밟았으면, 2행의 네번째 칸 (8)은 밟을 수 없습니다.

# 마지막 행까지 모두 내려왔을 때, 얻을 수 있는 점수의 최대값을 return하는 solution 함수를 완성해 주세요. 
# 위 예의 경우, 1행의 네번째 칸 (5), 2행의 세번째 칸 (7), 3행의 첫번째 칸 (4) 땅을 밟아 16점이 최고점이 되므로 16을 return 하면 됩니다.

# 제한사항
# 행의 개수 N : 100,000 이하의 자연수
# 열의 개수는 4개이고, 땅(land)은 2차원 배열로 주어집니다.
# 점수 : 100 이하의 자연수

land = [[1,2,3,5],[5,6,7,8],[4,3,2,1]]
answer = 16

def solution(land):
    answer = []
    for i in range(1, len(land)):
        for j in range(len(land[0])):                               # 두번째줄부터 마지막줄까지 순회
            land[i][j] += max(land[i-1][:j] + land[i-1][j+1:])      # 이전줄 바로 위 요소를 제외한 나머지 중에 최댓값과 현재 요소 더하기
    return max(land[-1])                                            # 마지막 줄엔 해당 조건을 만족한 열별 최대 계산값이 모여있음

result = solution(land)
print(f"{answer} / {result}")

