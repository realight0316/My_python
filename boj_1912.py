# 백준 : 연속합 (https://www.acmicpc.net/problem/1912)

# 문제
# n개의 정수로 이루어진 임의의 수열이 주어진다. 
# 우리는 이 중 연속된 몇 개의 수를 선택해서 구할 수 있는 합 중 가장 큰 합을 구하려고 한다. 
# 단, 수는 한 개 이상 선택해야 한다.

# 예를 들어서 10, -4, 3, 1, 5, 6, -35, 12, 21, -1 이라는 수열이 주어졌다고 하자. 
# 여기서 정답은 12+21인 33이 정답이 된다.

# 입력
# 첫째 줄에 정수 n(1 ≤ n ≤ 100,000)이 주어지고 둘째 줄에는 n개의 정수로 이루어진 수열이 주어진다. 
# 수는 -1,000보다 크거나 같고, 1,000보다 작거나 같은 정수이다.

# 출력
# 첫째 줄에 답을 출력한다.

# 예제 입력1 -> 33
# 10
# 10 -4 3 1 5 6 -35 12 21 -1

# 예제 입력2 -> 14
# 10
# 2 1 -4 3 4 -4 6 5 -5 1

# 예제 입력3 -> -1
# 5
# -1 -2 -3 -4 -5

import sys

n = int(sys.stdin.readline())
numlist = list(map(int, sys.stdin.readline().split()))
dp = [0] * n
dp[0] = numlist[0]              # 첫번째 dp는 수열의 첫번째 숫자로 시작

for i in range(1, n):
    dp[i] = max(numlist[i], dp[i-1] + numlist[i])   # 해당값과 이전수와의 합 중 더 큰값을 기억

print(max(dp))
# print(dp)

# 현재 값 numlist(i)와 이전값과의 합 dp[i-1]+numlist[i] 중 큰것을 dp에 기록
# 합이 손해면(=더 작으면) 연속된 결과를 포기하고 현재 값을 dp에 저장하며
# 합이 더 크면 연속된 수열로 선택하여 그 합을 dp에 기록한다
# 계속 반복하여 dp에 수열을 누적한다, 그 중에 최댓값을 출력