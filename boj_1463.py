# 백준 : 1로 만들기 (https://www.acmicpc.net/problem/1463)

# 문제
# 정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.

# X가 3으로 나누어 떨어지면, 3으로 나눈다.
# X가 2로 나누어 떨어지면, 2로 나눈다.
# 1을 뺀다.
# 정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 
# 연산을 사용하는 횟수의 최솟값을 출력하시오.

# 입력
# 첫째 줄에 1보다 크거나 같고, 106보다 작거나 같은 정수 N이 주어진다.

# 출력
# 첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.

# 예제 입력1 -> 1
# 2
# 예제 입력2 -> 3
# 10

# 힌트
# 10의 경우에 10 -> 9 -> 3 -> 1 로 3번 만에 만들 수 있다.

import sys

N = int(sys.stdin.readline())

dp = [0] * (N+1)                # 연산단계 기록리스트

for n in range(2, N+1):         # 1은 0이므로 제외하고 시작
    dp[n] = dp[n-1] + 1         # 2와 3으로 나누어 떨어지지 않으면 -1은 반드시 진행하므로 +1

    if n % 2 == 0:
        dp[n] = min(dp[n], dp[n//2]+1)      # 2나 3으로 나누어 떨어질때 해당 연산이용하고 한단계 +1
    if n % 3 == 0:
        dp[n] = min(dp[n], dp[n//3]+1)

print(dp[N])                    # 목표값 연산 횟수 출력



