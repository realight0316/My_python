# 백준 : 쉬운 계단 수 (https://www.acmicpc.net/problem/10844)

# 문제
# 45656이란 수를 보자.

# 이 수는 인접한 모든 자리의 차이가 1이다. 이런 수를 계단 수라고 한다.

# N이 주어질 때, 길이가 N인 계단 수가 총 몇 개 있는지 구해보자. 0으로 시작하는 수는 계단수가 아니다.

# 입력
# 첫째 줄에 N이 주어진다. N은 1보다 크거나 같고, 100보다 작거나 같은 자연수이다.

# 출력
# 첫째 줄에 정답을 1,000,000,000으로 나눈 나머지를 출력한다.

# 예제 입출력
# 1 -> 9
# 2 -> 17

import sys

N = int(sys.stdin.readline())           # 자릿수 확인

dp = [[0]*10 for _ in range(N+1)]       # 10 * N 2차원리스트 생성

for n in range(1, 10):                  # 한자리수는 그대로 계단수 1개로 인정
    dp[0][n] = 1

for i in range(1, N):                   # 한자리수일때 빼고 두자리부터 시작
    for j in range(10):                 # 0 ~ 9까지
        if j == 0:                      # 0은 1만 계단수 가능
            dp[i][j] = dp[i-1][1]
        elif j == 9:                    # 9는 8만 계단수 가능
            dp[i][j] = dp[i-1][8]
        else:                           # 1 ~ 8은 +1,-1 두개씩 계단수 가능, 앞자리수와 연계
            dp[i][j] = dp[i-1][j+1] + dp[i-1][j-1]

# for i in dp:
#     print(i)

print(sum(dp[N-1])%1000000000)          # 출력 조건 맞추기