# 백준 : 하노이의 탑 이동 순서 (https://www.acmicpc.net/problem/11729)

# 문제
# 세 개의 장대가 있고 첫 번째 장대에는 반경이 서로 다른 n개의 원판이 쌓여 있다. 각 원판은 반경이 큰 순서대로 쌓여있다. 이제 수도승들이 다음 규칙에 따라 첫 번째 장대에서 세 번째 장대로 옮기려 한다.

# 한 번에 한 개의 원판만을 다른 탑으로 옮길 수 있다.
# 쌓아 놓은 원판은 항상 위의 것이 아래의 것보다 작아야 한다.
# 이 작업을 수행하는데 필요한 이동 순서를 출력하는 프로그램을 작성하라. 단, 이동 횟수는 최소가 되어야 한다.

# 입력
# 첫째 줄에 첫 번째 장대에 쌓인 원판의 개수 N (1 ≤ N ≤ 20)이 주어진다.

# 출력
# 첫째 줄에 옮긴 횟수 K를 출력한다.

# 두 번째 줄부터 수행 과정을 출력한다. 두 번째 줄부터 K개의 줄에 걸쳐 두 정수 A B를 빈칸을 사이에 두고 출력하는데, 이는 A번째 탑의 가장 위에 있는 원판을 B번째 탑의 가장 위로 옮긴다는 뜻이다.

# 예제 입력: 3
# 예제 출력:
# 7
# 1 3
# 1 2
# 3 2
# 1 3
# 2 1
# 2 3
# 1 3

result = []
def towerofhanoi(num, start, end, sub):     # 원반갯수, 시작지점, 목적지점, 보조지점
    if num == 1:                            # 원판이 1개일때 혹은 마지막 원판
        result.append((start, end))         # 가진 원판 한개를 목적지점으로 이동하고 종료
        return
    towerofhanoi(num-1, start, sub, end)    # 최대원판을 목적지점으로 옮기기 위해선 나머지원판을 보조지점으로 옮겨야함, 이 순간엔 보조지점이 목적지
    result.append((start, end))             # 최하단에 있었을 최대원판을 목적지로 이동
    towerofhanoi(num-1, sub, end, start)    # 보조지점으로 옮겨놨던 원판들을 다시 목적지로 옮겨야함
    

num = int(input())
towerofhanoi(num, 1, 3, 2)

print(len(result))                          # 몇번의 이동이 있었는지 확인, 리스트내부 갯수 확인
for x, y in result:                         # 2차원 리스트로 저장했음으로 하나씩 꺼내서 할당
    print(x, y)                             # for x in result로 작동시 "(x, y)"로 출력되므로 하나씩 할당