# 백준 : 별 찍기 - 10 (https://www.acmicpc.net/problem/2447)

# 문제
# 재귀적인 패턴으로 별을 찍어 보자. N이 3의 거듭제곱(3, 9, 27, ...)이라고 할 때, 크기 N의 패턴은 N×N 정사각형 모양이다.
# 크기 3의 패턴은 가운데에 공백이 있고, 가운데를 제외한 모든 칸에 별이 하나씩 있는 패턴이다.
# ***
# * *
# ***
# N이 3보다 클 경우, 크기 N의 패턴은 공백으로 채워진 가운데의 (N/3)×(N/3) 정사각형을 크기 N/3의 패턴으로 둘러싼 형태이다. 예를 들어 크기 27의 패턴은 예제 출력 1과 같다.

# 입력
# 첫째 줄에 N이 주어진다. N은 3의 거듭제곱이다. 즉 어떤 정수 k에 대해 N=3^k이며, 이때 1 ≤ k < 8이다.

# 출력
# 첫째 줄부터 N번째 줄까지 별을 출력한다.

# 예제 입력: 27
# 예제 출력:
# ***************************
# * ** ** ** ** ** ** ** ** *
# ***************************
# ***   ******   ******   ***
# * *   * ** *   * ** *   * *
# ***   ******   ******   ***
# ***************************
# * ** ** ** ** ** ** ** ** *
# ***************************
# *********         *********
# * ** ** *         * ** ** *
# *********         *********
# ***   ***         ***   ***
# * *   * *         * *   * *
# ***   ***         ***   ***
# *********         *********
# * ** ** *         * ** ** *
# *********         *********
# ***************************
# * ** ** ** ** ** ** ** ** *
# ***************************
# ***   ******   ******   ***
# * *   * ** *   * ** *   * *
# ***   ******   ******   ***
# ***************************
# * ** ** ** ** ** ** ** ** *
# ***************************


def recursive_function(unit):                       # 기본단위(unit)가 될 별리스트를 인자로 받음
    result = []
    for i in range(len(unit) * 3):                  # 기본 단위인자(unit)가 3배 증가해야함
        if i // len(unit) == 1:                     # 3으로 나눴을때 몫의 정수부분이 1이면(= 중앙여백 들어가는 줄)
            result.append(
                unit[i % len(unit)]                 # 해당 unit만큼 * 가져와서
                + " " * len(unit)                   # unit길이만큼 공백 추가
                + unit[i % len(unit)])              # 공백뒤에 해당 unit만큼 * 가져와서 추가
        else:
            result.append(unit[i % len(unit)] * 3)  # unit한줄씩 3배씩 복사
    return result

result = ['***', '* *', '***']                      # 기본단위(unit)이자 N이 3일때의 결과값(result)

N = int(input())
cnt = 0

while N != 3:                                       # N이 3이면 추가적인 복사가 필요없으므로 생략
    N //= 3                                         # 3의 몇제곱인지 확인해야함
    cnt += 1                                        # N = 3^cnt

for _ in range(cnt):                                # 제곱수만큼 진행, 3이면 제곱수 없음으로 0회 진행
    result = recursive_function(result)

for x in result:
    print(x)
