# 백준 : 블랙잭 (https://www.acmicpc.net/problem/2798)

# 문제
# 카지노에서 제일 인기 있는 게임 블랙잭의 규칙은 상당히 쉽다. 카드의 합이 21을 넘지 않는 한도 내에서,
# 카드의 합을 최대한 크게 만드는 게임이다. 블랙잭은 카지노마다 다양한 규정이 있다.

# 한국 최고의 블랙잭 고수 김정인은 새로운 블랙잭 규칙을 만들어 상근, 창영이와 게임하려고 한다.
# 김정인 버전의 블랙잭에서 각 카드에는 양의 정수가 쓰여 있다.
# 그 다음, 딜러는 N장의 카드를 모두 숫자가 보이도록 바닥에 놓는다. 그런 후에 딜러는 숫자 M을 크게 외친다.

# 이제 플레이어는 제한된 시간 안에 N장의 카드 중에서 3장의 카드를 골라야 한다.
# 블랙잭 변형 게임이기 때문에, 플레이어가 고른 카드의 합은 M을 넘지 않으면서 M과 최대한 가깝게 만들어야 한다.

# N장의 카드에 써져 있는 숫자가 주어졌을 때, M을 넘지 않으면서 M에 최대한 가까운 카드 3장의 합을 구해 출력하시오.

# 입력
# 첫째 줄에 카드의 개수 N(3 ≤ N ≤ 100)과 M(10 ≤ M ≤ 300,000)이 주어진다. 둘째 줄에는 카드에 쓰여 있는 수가 주어지며,
# 이 값은 100,000을 넘지 않는 양의 정수이다.
# 합이 M을 넘지 않는 카드 3장을 찾을 수 있는 경우만 입력으로 주어진다.

# 출력
# 첫째 줄에 M을 넘지 않으면서 M에 최대한 가까운 카드 3장의 합을 출력한다.

# 예제입력1
# 5 21
# 5 6 7 8 9
# 출력 = 21

# 예제입력2
# 10 500
# 93 181 245 214 315 36 185 138 216 295
# 출력 = 497

# 브루트 포스(Brute force) 알고리즘 이용 (brute: 짐승, 짐승같은, 난폭한, 맹목적인)
# 정확도 100%이며 거의 완벽한 병렬작업이 가능하지만 문제복잡도에 매우 민감함

n, m = map(int, input().split())
x = list(map(int, input().split()))

ans = 0

for x1 in range(len(x)):                # 첫번째 선택 카드
    for x2 in range(x1+1, len(x)):      # 두번째 선택 카드(이미 선택된 카드 제외)
        for x3 in range(x2+1, len(x)):  # 세번째 선택 카드(이미 선택된 카드 제외)
            num = x[x1] + x[x2] + x[x3] # 선택된 카드의 합
            if num <= m:                # 합이 기준값 이하인지 확인
                ans = max(ans, num)     # 예상정답값과 무엇이 큰지 비교
print(ans)                              # 종료하고 정답 출력

# -------------------------------------------------------------------
# 파이썬 itertools 라이브러리를 이용한 방법

from itertools import permutations, combinations

n, m = map(int, input().split())
x = list(map(int, input().split()))

array = permutations(x, 3)      # x의 원소중에서 3개를 뽑아 순열리스트를 만듬
array = combinations(x, 3)      # x의 원소중에서 3개를 뽑아 조합리스트를 만듬 (원소중복 없음)
# 순열은 순서의 개념이 포함되어있어서 (A, B)와 (B, A)는 다른것으로 취급한다. 조합은 동일 취급

ans = 0

for i in array:                     # 자동으로 만들어진 리스트에서 하나씩 받아옴
    if m >= sum(i):                 # 해당 리스트 원소의 합이 기준값이하인지 확인
        ans = max(ans, sum(i))      # 가장 큰값을 정답으로 처리
print(ans)


